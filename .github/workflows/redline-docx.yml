name: Redline DOCX (LibreOffice headless) - OPTIMIZED

on:
  workflow_dispatch:
    inputs:
      input_docx:
        description: 'Path to input .docx'
        required: true
        default: 'docs/input.docx'
      edits_csv:
        description: 'Path to edits CSV or JSON'
        required: true
        default: 'edits/edits_sample.csv'
      output_docx:
        description: 'Path to output .docx'
        required: true
        default: 'build/output.docx'
      user_id:
        description: 'User ID for isolation (optional)'
        required: false
        default: ''
      branch:
        description: 'Branch to checkout (optional)'
        required: false
        default: 'main'

jobs:
  redline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout user-specific branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0

      # OPTIMIZATION 1: Cache LibreOffice installation (simple and reliable)
      - name: Cache LibreOffice installation
        uses: actions/cache@v4
        with:
          path: |
            /usr/lib/libreoffice
            /usr/lib/python3/dist-packages/*uno*
            /usr/share/libreoffice
          key: libreoffice-${{ runner.os }}-simple-v1
          restore-keys: |
            libreoffice-${{ runner.os }}-simple-

      # OPTIMIZATION 2: Reliable LibreOffice installation
      - name: Install LibreOffice and Python UNO
        run: |
          if [ ! -d "/usr/lib/libreoffice" ]; then
            echo "Installing LibreOffice..."
            sudo apt-get update -qq
            sudo apt-get install -y --no-install-recommends libreoffice python3-uno xvfb
            echo "✅ LibreOffice installed"
          else
            echo "✅ LibreOffice found in cache"
          fi

      # OPTIMIZATION 3: Simplified Python UNO setup
      - name: Setup Python UNO (Fast)
        id: lo_py
        run: |
          export PYTHONPATH="/usr/lib/python3/dist-packages:/usr/lib/libreoffice/program:$PYTHONPATH"
          if python3 -c "import uno; print('UNO OK')" 2>/dev/null; then
            echo "path=python3" >> $GITHUB_OUTPUT
            echo "pythonpath=/usr/lib/python3/dist-packages:/usr/lib/libreoffice/program" >> $GITHUB_OUTPUT
          else
            echo "path=/usr/lib/libreoffice/program/python3" >> $GITHUB_OUTPUT
            echo "pythonpath=" >> $GITHUB_OUTPUT
          fi

      # OPTIMIZATION 4: Pre-validate files quickly
      - name: Verify input files (Fast)
        run: |
          [ -f '${{ github.event.inputs.input_docx }}' ] || (echo "Input DOCX missing" && exit 1)
          [ -f '${{ github.event.inputs.edits_csv }}' ] || (echo "CSV/JSON missing" && exit 1)
          echo "✅ All input files present"

      # OPTIMIZATION 4: Streamlined execution (reliable)
      - name: Run redline job (Optimized)
        env:
          LO_PY: ${{ steps.lo_py.outputs.path }}
          PYTHONPATH: ${{ steps.lo_py.outputs.pythonpath }}
          UNO_PATH: /usr/lib/libreoffice/program
          DISPLAY: :99
        run: |
          mkdir -p build

          # Clean up any existing processes
          sudo pkill -f soffice || true

          # Start virtual display
          Xvfb :99 -screen 0 800x600x16 > /dev/null 2>&1 &

          # Wait for display to be ready
          sleep 1

          # Set environment
          export PYTHONPATH="$PYTHONPATH"
          export UNO_PATH="/usr/lib/libreoffice/program"
          export DISPLAY=:99

          # Run with fast mode enabled
          "$LO_PY" scripts/apply_tracked_edits_libre.py \
            --in "${{ github.event.inputs.input_docx }}" \
            --csv "${{ github.event.inputs.edits_csv }}" \
            --out "${{ github.event.inputs.output_docx }}" \
            --launch \
            --fast

      - name: Upload output
        uses: actions/upload-artifact@v4
        with:
          name: redlined-docx-${{ github.event.inputs.user_id }}-${{ github.run_id }}-${{ github.run_number }}
          path: ${{ github.event.inputs.output_docx }}
